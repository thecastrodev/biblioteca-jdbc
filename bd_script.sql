-- MySQL Script generated by MySQL Workbench
-- Wed Jun 28 00:02:33 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema equipe494627
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema equipe494627
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `equipe494627` ;
USE `equipe494627` ;

-- -----------------------------------------------------
-- Table `equipe494627`.`Editora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Editora` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Editora` (
  `cod_editora` VARCHAR(10)   NOT NULL,
  `nome_editora` VARCHAR(45)   NOT NULL,
  PRIMARY KEY (`cod_editora`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe494627`.`Categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Categoria` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Categoria` (
  `cod_categoria` VARCHAR(10) NOT NULL,
  `nome_categoria` VARCHAR(45)   NULL,
  PRIMARY KEY (`cod_categoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe494627`.`Livro`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Livro` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Livro` (
  `ISBN` VARCHAR(20)  NOT NULL,
  `titulo` VARCHAR(40)   NOT NULL,
  `ano_de_lancamento` CHAR(4) NOT NULL,
  `quantidade_de_copias` INT UNSIGNED NOT NULL,
  `cod_editora` VARCHAR(10) NOT NULL,
  `cod_categoria` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`ISBN`),
  UNIQUE INDEX `ISBN_UNIQUE` (`ISBN` ASC) VISIBLE,
  INDEX `fk_Livro_Editora1_idx` (`cod_editora` ASC) VISIBLE,
  INDEX `fk_Livro_Categoria1_idx` (`cod_categoria` ASC) VISIBLE,
  CONSTRAINT `fk_Livro_Editora`
    FOREIGN KEY (`cod_editora`)
    REFERENCES `equipe494627`.`Editora` (`cod_editora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Livro_Categoria`
    FOREIGN KEY (`cod_categoria`)
    REFERENCES `equipe494627`.`Categoria` (`cod_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe494627`.`Autor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Autor` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Autor` (
  `email` VARCHAR(100)  NOT NULL,
  `nome_autor` VARCHAR(45) NOT NULL,
  `nacionalidade` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`email`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB
 ;


-- -----------------------------------------------------
-- Table `equipe494627`.`Usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Usuario` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Usuario` (
  `senha` VARCHAR(30)  NOT NULL,
  `nome_usuario` VARCHAR(45)  NOT NULL,
  `endereco` VARCHAR(50) NULL,
  `CPF` CHAR(11)  NOT NULL,
  UNIQUE INDEX `CPF_UNIQUE` (`CPF` ASC) VISIBLE,
  PRIMARY KEY (`CPF`))
ENGINE = InnoDB
 ;


-- -----------------------------------------------------
-- Table `equipe494627`.`Curso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Curso` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Curso` (
  `cod_curso` VARCHAR(10)  NOT NULL,
  `nome_curso` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cod_curso`))
ENGINE = InnoDB
 ;


-- -----------------------------------------------------
-- Table `equipe494627`.`Aluno`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Aluno` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Aluno` (
  `mat` VARCHAR(6) NOT NULL,
  `data_de_ingresso` DATETIME NOT NULL,
  `data_de_conclusao_prevista` DATETIME NOT NULL,
  `CPF` CHAR(11)  NOT NULL,
  `cod_curso` VARCHAR(10)  NOT NULL,
  PRIMARY KEY (`CPF`),
  INDEX `fk_Aluno_Usuario1_idx` (`CPF` ASC) VISIBLE,
  INDEX `fk_Aluno_Curso1_idx` (`cod_curso` ASC) VISIBLE,
  CONSTRAINT `fk_Aluno_Usuario1`
    FOREIGN KEY (`CPF`)
    REFERENCES `equipe494627`.`Usuario` (`CPF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aluno_Curso1`
    FOREIGN KEY (`cod_curso`)
    REFERENCES `equipe494627`.`Curso` (`cod_curso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe494627`.`Professor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Professor` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Professor` (
  `mat_siape` VARCHAR(10) NOT NULL,
  `data_de_contratacao` DATETIME NOT NULL,
  `regime_de_trabalho` ENUM('20h', '40h', 'DE') NOT NULL,
  `CPF` CHAR(11)  NOT NULL,
  `cod_curso` VARCHAR(10)  NOT NULL,
  PRIMARY KEY (`CPF`),
  INDEX `fk_Professor_Usuario1_idx` (`CPF` ASC) VISIBLE,
  INDEX `fk_Professor_Curso1_idx` (`cod_curso` ASC) VISIBLE,
  CONSTRAINT `fk_Professor_Usuario`
    FOREIGN KEY (`CPF`)
    REFERENCES `equipe494627`.`Usuario` (`CPF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Professor_Curso`
    FOREIGN KEY (`cod_curso`)
    REFERENCES `equipe494627`.`Curso` (`cod_curso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe494627`.`Funcionario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Funcionario` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Funcionario` (
  `mat` VARCHAR(10) NOT NULL,
  `CPF` CHAR(11)  NOT NULL,
  PRIMARY KEY (`CPF`),
  INDEX `fk_Funcionario_Usuario1_idx` (`CPF` ASC) VISIBLE,
  CONSTRAINT `fk_Funcionario_Usuario1`
    FOREIGN KEY (`CPF`)
    REFERENCES `equipe494627`.`Usuario` (`CPF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe494627`.`Reserva`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Reserva` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Reserva` (
  `ISBN` VARCHAR(20)  NOT NULL,
  `CPF` CHAR(11)  NOT NULL,
  `data_de_reserva` DATE NOT NULL,
  PRIMARY KEY (`ISBN`, `CPF`),
  INDEX `fk_Reserva_Livro1_idx` (`ISBN` ASC) VISIBLE,
  INDEX `fk_Reserva_Usuario1_idx` (`CPF` ASC) VISIBLE,
  CONSTRAINT `fk_Reserva_Livro1`
    FOREIGN KEY (`ISBN`)
    REFERENCES `equipe494627`.`Livro` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reserva_Usuario1`
    FOREIGN KEY (`CPF`)
    REFERENCES `equipe494627`.`Usuario` (`CPF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe494627`.`Livro_has_Autor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Livro_has_Autor` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Livro_has_Autor` (
  `ISBN` VARCHAR(20)  NOT NULL,
  `email` VARCHAR(100)  NOT NULL,
  PRIMARY KEY (`ISBN`, `email`),
  INDEX `fk_Livro_has_Autor_Autor1_idx` (`email` ASC) VISIBLE,
  INDEX `fk_Livro_has_Autor_Livro1_idx` (`ISBN` ASC) VISIBLE,
  CONSTRAINT `fk_Livro_has_Autor_Livro1`
    FOREIGN KEY (`ISBN`)
    REFERENCES `equipe494627`.`Livro` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Livro_has_Autor_Autor1`
    FOREIGN KEY (`email`)
    REFERENCES `equipe494627`.`Autor` (`email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipe494627`.`Telefone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipe494627`.`Telefone` ;

CREATE TABLE IF NOT EXISTS `equipe494627`.`Telefone` (
  `CPF` CHAR(11)  NOT NULL,
  `telefone` VARCHAR(14) NOT NULL,
  PRIMARY KEY (`CPF`, `telefone`),
  CONSTRAINT `fk_Telefone_Usuario1`
    FOREIGN KEY (`CPF`)
    REFERENCES `equipe494627`.`Usuario` (`CPF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------

-- -----------------------------------------------------
-- View `equipe494627`.`LivrosPorCategoria`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `equipe494627`.`LivrosPorCategoria`;
USE `equipe494627`;
CREATE VIEW `equipe494627`.`LivrosPorCategoria` AS
	SELECT ISBN, titulo, ano_de_lancamento, nome_editora editora, nome_categoria categoria, nome_autor autor
    FROM Livro l
    NATURAL JOIN Livro_has_Autor la
    NATURAL JOIN Autor a
    NATURAL JOIN Editora e
    NATURAL JOIN Categoria c
    ORDER BY c.nome_categoria;

-- -----------------------------------------------------
-- View `equipe494627`.`LivrosPorEditora`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `equipe494627`.`LivrosPorEditora`;
USE `equipe494627`;
CREATE VIEW `equipe494627`.`LivrosPorEditora` AS
	SELECT ISBN, titulo, ano_de_lancamento, nome_editora editora, nome_categoria categoria, nome_autor autor
    FROM Livro l
    NATURAL JOIN Livro_has_Autor la
    NATURAL JOIN Autor a
    NATURAL JOIN Editora e
    NATURAL JOIN Categoria c
    ORDER BY nome_editora;

-- -----------------------------------------------------
-- View `equipe494627`.`LivrosPorAnoDeLancamento`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `equipe494627`.`LivrosPorAnoDeLancamento`;
USE `equipe494627`;
CREATE VIEW `equipe494627`.`LivrosPorAnoDeLancamento` AS
	SELECT ISBN, titulo, ano_de_lancamento, nome_editora editora, nome_categoria categoria, nome_autor autor
    FROM Livro l
    NATURAL JOIN Livro_has_Autor la
    NATURAL JOIN Autor a
    NATURAL JOIN Editora e
    NATURAL JOIN Categoria c
    ORDER BY ano_de_lancamento;

-- -----------------------------------------------------
-- View `equipe494627`.`LivrosPorAutor`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `equipe494627`.`LivrosPorAutor`;
USE `equipe494627`;
CREATE VIEW `equipe494627`.`LivrosPorAutor` AS
	SELECT ISBN, titulo, ano_de_lancamento, nome_editora editora, nome_categoria categoria, nome_autor autor
    FROM Livro l
    NATURAL JOIN Livro_has_Autor la
    NATURAL JOIN Autor a
    NATURAL JOIN Editora e
    NATURAL JOIN Categoria c
    ORDER BY nome_autor;

-- -----------------------------------------------------
-- View `equipe494627`.`ProfessoresPorCurso`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `equipe494627`.`ProfessoresPorCurso`;
USE `equipe494627`;
CREATE VIEW `equipe494627`.`ProfessoresPorCurso` AS
	SELECT nome_curso, mat_siape, nome_usuario, telefone
    FROM Professor p
    NATURAL JOIN Usuario u
    NATURAL JOIN Curso c
    LEFT JOIN Telefone t ON u.CPF = t.CPF 
    ORDER BY c.nome_curso, u.nome_usuario;
    
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------

USE `equipe494627`;

DROP TRIGGER IF EXISTS `equipe494627`.`tg_limite_reserva`;

DELIMITER $$

USE `equipe494627`$$
CREATE DEFINER = CURRENT_USER TRIGGER `equipe494627`.`tg_limite_reserva` BEFORE INSERT ON `Reserva` FOR EACH ROW
BEGIN
  DECLARE count INT;
  DECLARE limite INT;
  DECLARE tipo_usuario VARCHAR(20);

    -- Obter o tipo de usuário
  SELECT CASE
      WHEN EXISTS(SELECT * FROM Aluno WHERE CPF = NEW.CPF) THEN 'Aluno'
      WHEN EXISTS(SELECT * FROM Funcionario WHERE CPF = NEW.CPF) THEN 'Funcionario'
      WHEN EXISTS(SELECT * FROM Professor WHERE CPF = NEW.CPF) THEN 'Professor'
      ELSE ''
  END INTO tipo_usuario;

  -- Define o limite de acordo com o tipo de usuário
  CASE
      WHEN tipo_usuario = 'Aluno' THEN SET limite = 3;
      WHEN tipo_usuario = 'Professor' THEN SET limite = 5;
      WHEN tipo_usuario = 'Funcionario' THEN SET limite = 4;
      ELSE SET limite = 0; -- Define um limite padrão caso o tipo de usuário não seja reconhecido
  END CASE;

  -- Conta o número de reservas existentes para o CPF fornecido na nova linha inserida
  SELECT COUNT(*) INTO count FROM Reserva WHERE data_de_reserva = NEW.data_de_reserva AND CPF = NEW.CPF;

  -- Verifica se o contador atingiu ou excedeu o limite para o tipo de usuário
  IF count >= limite THEN
      SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Limite de reservas atingido';
  END IF;
END$$

DELIMITER ;

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE USER IF NOT EXISTS 'usuario' IDENTIFIED BY '123456';
GRANT SELECT ON TABLE `equipe494627`.* TO 'usuario';

-- CREATE USER IF NOT EXISTS 'Admin' IDENTIFIED BY 'Root';
-- GRANT ALL ON `equipe494627`.* TO 'Admin';

CREATE USER IF NOT EXISTS 'Bibliotecario' IDENTIFIED BY 'Root';
GRANT SELECT, INSERT, TRIGGER ON TABLE `equipe494627`.* TO 'Bibliotecario';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------

INSERT INTO `equipe494627`.`Editora` (`cod_editora`, `nome_editora`) 
VALUES ('EDT1', 'Editora ABC'), 
       ('EDT2', 'Editora XYZ');


INSERT INTO `equipe494627`.`Categoria` (`cod_categoria`, `nome_categoria`) 
VALUES ('CAT1', 'Ciências Humanas e Sociais'), 
       ('CAT2', 'Literatura Brasileira'), 
       ('CAT3', 'Ficção Científica'), 
       ('CAT4', 'Romance');


INSERT INTO `equipe494627`.`Livro` 
       (`ISBN`, `titulo`, `ano_de_lancamento`, `quantidade_de_copias`, `cod_editora`, `cod_categoria`) 
VALUES ('ISBN1', 'Livro A', '2022', 10, 'EDT1', 'CAT1'), 
       ('ISBN2', 'Livro B', '2021', 5, 'EDT2', 'CAT2'), 
       ('ISBN3', 'Livro C', '2022', 8, 'EDT2', 'CAT3'), 
       ('ISBN4', 'Livro D', '2023', 6, 'EDT1', 'CAT4'),
       ('ISBN5', 'Livro E', '2023', 4, 'EDT2', 'CAT4'), 
       ('ISBN6', 'Livro F', '2020', 4, 'EDT1', 'CAT3');


INSERT INTO `equipe494627`.`Autor` (`email`, `nome_autor`, `nacionalidade`) 
VALUES ('autor1@example.com', 'Autor X', 'Brasileira'),
       ('autor2@example.com', 'Autor Y', 'Americana'),
       ('autor3@example.com', 'Autor Z', 'Brasileira');


INSERT INTO `equipe494627`.`Usuario` (`senha`, `nome_usuario`, `endereco`, `CPF`) 
VALUES ('123456', 'Joao Silva', 'Rua A, 123', '12345678901'),
       ('123456', 'Maria Santos', 'Rua B, 456', '12345678902'), 
       ('123456', 'Joao Santos', 'Rua E, 456', '12345678903'),
       ('123456', 'Miguel Prado', 'Rua B, 546', '12345678904'), 
       ('123456', 'Carlos Magno', 'Rua C, 213', '12345678905'),
       ('123456', 'Joao Magno', 'Rua D, 123', '12345678906'), 
       ('123456', 'Ana Maria', 'Rua E, 846', '12345678907');


INSERT INTO `equipe494627`.`Curso` (`cod_curso`, `nome_curso`)
VALUES ('COD1', 'Engenharia de Computação'), 
       ('COD2', 'Engenharia Elétrica'),
       ('COD3', 'Música'), 
       ('COD4', 'Psicologia'), 
       ('COD5', 'Odontologia');


INSERT INTO `equipe494627`.`Aluno` (`mat`, `data_de_ingresso`, `data_de_conclusao_prevista`, `CPF`, `cod_curso`)
VALUES ('MAT_A1', '2022-03-01', '2026-12-31', '12345678901', 'COD1'), 
       ('MAT_A2', '2023-01-01', '2027-12-31', '12345678903', 'COD2');


INSERT INTO `equipe494627`.`Professor` (`mat_siape`, `data_de_contratacao`, `regime_de_trabalho`, `CPF`, `cod_curso`) 
VALUES ('MAT_P1', '2021-08-01', '40h', '12345678904', 'COD1'), 
       ('MAT_P2', '2022-01-01', '20h', '12345678902', 'COD2'), 
       ('MAT_P3', '2022-08-01', 'DE', '12345678905', 'COD2');


INSERT INTO `equipe494627`.`Funcionario` (`mat`, `CPF`)
VALUES ('MAT_F1', '12345678906'), 
       ('MAT_F2', '12345678907');


INSERT INTO `equipe494627`.`Reserva` (`ISBN`, `CPF`, `data_de_reserva`) 
VALUES ('ISBN1', '12345678901', '2023-06-14'), 
       ('ISBN2', '12345678902', '2023-06-15'), 
       ('ISBN2', '12345678907', '2023-06-16'), 
       ('ISBN2', '12345678901', '2023-06-17'), 
       ('ISBN3', '12345678901', '2023-06-18');


INSERT INTO `equipe494627`.`Livro_has_Autor` (`ISBN`, `email`) 
VALUES ('ISBN1', 'autor1@example.com'), 
       ('ISBN2', 'autor2@example.com'),
       ('ISBN4', 'autor3@example.com'), 
       ('ISBN3', 'autor3@example.com'),
       ('ISBN5', 'autor2@example.com'), 
       ('ISBN6', 'autor1@example.com');
       
INSERT INTO `equipe494627`.`Telefone` (`CPF`, `telefone`) 
VALUES ('12345678901', '5588999999901'),
			 ('12345678902', '5588999999902'),
			 ('12345678904', '5588999999905'),
			 ('12345678905', '5588999999906'),
			 ('12345678907', '5588999999907');

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------